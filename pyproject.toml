[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quantfin"
version = "2.0.0"
authors = [
  { name="Diljit Singh", email="first_last22@google.com" },
]
description = "A financial options pricing and analysis library."
readme = "README.md"
requires-python = ">=3.9"
license = { file="LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial",
]

dependencies = [
    "streamlit==1.45.1",
    "pandas==2.2.3",
    "scipy==1.15.2",
    "matplotlib==3.10.1",
    "numpy==2.2.5",
    "yfinance==0.2.63",
    "plotly==6.1.2"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "ruff",
    "mkdocs",
    "mkdocs-material",
]

[project.scripts]
# pytest, ruff and mkdocs already install their own CLIs, so you can skip them if you like
# but here’s how you’d alias them too:
test        = "pytest:main"
lint        = "ruff:main"
docs        = "mkdocs.cli:build"

# Benchmarking
bench-full      = "quantfin.benchmark.run_all_benchmarks:main"
bench-report    = "quantfin.benchmark.run_consolidated_benchmarks:main"

# Workflows
daily-calib     = "quantfin.workflows.run_calib:main"
backtest        = "quantfin.workflows.run_backtest:main"

# Your custom scripts
calibrate-dashboard = "quantfin.scripts.calibration_dashboard:main"
run-everything      = "quantfin.scripts.run_everything:main"
dashboard = "quantfin.scripts.launch_dashboard:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "I"]